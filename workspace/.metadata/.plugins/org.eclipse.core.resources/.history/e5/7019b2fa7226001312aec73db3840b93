package differentialEvolution;

import java.io.*;
import java.util.Scanner;

public class DE {
	final static int POPSIZE = 50;
	final static int MAXGENS = 10000;
	final static int dim = 2;
	public static void init(Genotype[] population) throws FileNotFoundException{
		double lbound;
		double ubound;
		Scanner input = new Scanner(new File("bound.txt"));
		lbound = input.nextDouble();
		ubound = input.nextDouble();
		for(int i = 0;i < Genotype.NVARS;i++){
			for(int j = 0;i < POPSIZE;j++){
				population[j].fitness = 0;
				//population[j].cfitness = 0;
				//population[j].rfitness = 0;
				population[j].lower[i] = lbound;
				population[j].upper[i] = ubound;
				population[j].gene[i] = Math.random() * 
						(population[j].upper[i] - population[j].lower[i]) + 
						population[j].lower[i];
			}
		}
		input.close();
	}
	public static void evaluate(Genotype[] population){
		for(int i = 0;i < POPSIZE;i++){
			;
		}
	}
	public static void select(Genotype[] population,Genotype[] MidPop){
		for(int i = 0;i < POPSIZE;i++)
			if(MidPop[i].fitness <= population[i].fitness)
				population[i] = MidPop[i];		
	}
	public static void mutate(Genotype[] population,Genotype[] MidPop){
		for(int i = 0;i < POPSIZE;i++){
			
				int temp = (int)(POPSIZE * Math.random());
					if(temp == POPSIZE)
						temp--;
				Genotype temp1 = population[temp];
				temp = (int)(POPSIZE * Math.random()); 
				if(temp == POPSIZE)
					temp--;
				Genotype temp2 = population[temp];
			for(int j = 0;j < Genotype.NVARS;j++){
				MidPop[i].gene[j] = population[i].gene[j] + Genotype.SCALE * 
										(temp1.gene[j] - temp2.gene[j]);				
			}
		}
	}
	public static void cross(Genotype[] population,Genotype[] MidPop){
		for(int i = 0;i < POPSIZE;i++){
			int jrand = (int) (Math.random() * POPSIZE);
			if(jrand == POPSIZE)
				jrand--;
			for(int j = 0;j < Genotype.NVARS;j++){
				if(Math.random() > Genotype.PXOVER && j != jrand){
					MidPop[i].gene[j] = population[i].gene[j];
				}
			}
		}
	}
	public static void main(String[] args) throws FileNotFoundException{
		System.out.println("sjfklsd");
		Genotype[] population= new Genotype[POPSIZE+1];
		//Genotype[] newPopulation = new Genotype[POPSIZE+1];
		Genotype[] MidPop = new Genotype[POPSIZE+1];
 		for(int i = 0;i <= POPSIZE;i++)
			population[i] = new Genotype(dim);
		init(population);
		int generation = 0;
		while(generation < MAXGENS){
			generation++;
			mutate(population,MidPop);
			cross(population,MidPop);
			evaluate(population);
			evaluate(MidPop);
			select(population,MidPop);
		}
	}
}
